OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2021-10-28T15:58:51.069082-04:00' ],		#prior : OmReference [ 'Pharo9.0-SNAPSHOT-64bit-1570116.61pl5v7eooh6yn03mabzo09oe', '11643' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'mutationRate:',			#protocol : #actions,			#sourceCode : 'mutationRate: aFloat \t\r\tengine mutationRate: aFloat',			#stamp : '',			#package : #SmallSuiteGenerator		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'mutationRate:',			#protocol : #actions,			#sourceCode : 'mutationRate: aFloat \t\r\tself assert: [ aFloat isNumber and: [ aFloat > 0 and: [ aFloat <= 1 ] ] ] description: [ \'Mutation rate must be greater than 0 and less or equal than 1\' ].\r\tengine mutationRate: aFloat',			#stamp : '',			#package : #SmallSuiteGenerator		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2021-10-28T15:58:51.069543-04:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'numberOfGenerations:',			#protocol : #initialization,			#sourceCode : 'numberOfGenerations: aNumber\r\tengine numberOfGenerations: aNumber.\r\tnumberOfIterations := aNumber.',			#stamp : '',			#package : #SmallSuiteGenerator		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'numberOfGenerations:',			#protocol : #initialization,			#sourceCode : 'numberOfGenerations: aNumber\r\tself assert: [ aNumber isInteger and: [ aNumber > 1 ] ] description: [ \'Number of generations must be integer and greater than 1\' ].\r\tengine numberOfGenerations: aNumber.\r\tnumberOfIterations := aNumber.',			#stamp : '',			#package : #SmallSuiteGenerator		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2021-10-28T15:58:51.069919-04:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'numberOfStatements:',			#protocol : #configuration,			#sourceCode : 'numberOfStatements: anInteger\r\tself generatedClass numberOfStatements: anInteger',			#stamp : '',			#package : #SmallSuiteGenerator		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'numberOfStatements:',			#protocol : #configuration,			#sourceCode : 'numberOfStatements: anInteger\r\tself assert: [ anInteger isInteger and: [ anInteger > 1 ] ] description: [ \'Number must be integer and greater than 1\' ].\r\tself generatedClass numberOfStatements: anInteger',			#stamp : '',			#package : #SmallSuiteGenerator		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2021-10-28T15:58:51.070216-04:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'populationSize:',			#protocol : #configuration,			#sourceCode : 'populationSize: anInteger\r\tself generatedClass populationSize: anInteger.',			#stamp : '',			#package : #SmallSuiteGenerator		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'populationSize:',			#protocol : #configuration,			#sourceCode : 'populationSize: anInteger\r\tself assert: [ anInteger isInteger and: [ anInteger > 1 ] ] description: [ \'Population size must be integer and greater than 1\' ].\r\tself generatedClass populationSize: anInteger.',			#stamp : '',			#package : #SmallSuiteGenerator		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2021-10-28T15:58:51.070477-04:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'seed:',			#protocol : #'instance creation',			#sourceCode : 'seed: aNumber \r\tinitialSeed := aNumber.\r\tSPlatform seed: aNumber',			#stamp : '',			#package : #SmallSuiteGenerator		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'seed:',			#protocol : #'instance creation',			#sourceCode : 'seed: aNumber \r\tself assert: [ aNumber isInteger and: [ aNumber > 0 ] ] description: [ \'The seed must be positive and greater than 0\' ].\r\tinitialSeed := aNumber.\r\tSPlatform seed: aNumber',			#stamp : '',			#package : #SmallSuiteGenerator		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2021-10-28T15:58:51.07076-04:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'selectionStrategy:',			#protocol : #actions,			#sourceCode : 'selectionStrategy: aSelectionStrategy\r\tself generatedClass selectionStrategy: aSelectionStrategy',			#stamp : '',			#package : #SmallSuiteGenerator		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #STestCaseFactory			},			#name : #'selectionStrategy:',			#protocol : #actions,			#sourceCode : 'selectionStrategy: aSelectionStrategy\r\tself assert: [ { SGATournamentSelection. SGATruncatedSelection. SGARandomSelection. SGARankSelection. SGARouletteSelection } includes: aSelectionStrategy ] description: [ \'Selection strategy class must be one of the selection classes: SGATournamentSelection, SGATruncatedSelection, SGARandomSelection, SGARankSelection and SGARouletteSelection\' ]. \r\tself generatedClass selectionStrategy: aSelectionStrategy',			#stamp : '',			#package : #SmallSuiteGenerator		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2021-10-28T15:59:33.62584-04:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpSessionSnapshot {		#imageName : '/home/andreina/Documents/Github/ArtifactTestEvoViz/Box2DLite.image'	}}