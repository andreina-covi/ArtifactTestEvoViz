| typeInfo block regex tCFactory |"First, we execute an usage example to collect type information of the target class"block := [ (SStack newStackWith: (OrderedCollection new             		add: 12;            		add: -2;            		add: 'hello';            		add: #nameOf;            		add: ((SSTeacher name: 'Johan' with: 15)            			nickname;            			canRegister: ((SConference price: 50) offerPrice: 50);            				idTeacher;            			yearsWorkExperience);            		yourself )) firstLinkStack;            lastLinkStack;            top;            push: 4;            pop ] .regex := 'SmallSuiteGenerator-Scenario'.typeInfo := STypeInfo asTypeInfo: (        SSTypeCollector profile: block onPackagesMatching: regex)."then, we use the type information to generate tests. Configure the hyperparameter values which are marked as 'hyperparameter'"tCFactory := STestCaseFactoryPharo new    targetClassName: #SStack;	typeInfo: typeInfo;    targetPackageRegex: regex;    outputPackageName: 'Generated';    numberOfGenerations: 5;  "hyperparameter, numberOfGenerations > 1 and integer"    numberOfStatements: 10;  "hyperparameter, numberOfStatements > 1 and integer"    populationSize: 11;		  "hyperparameter, populationSize > 1 and integer"	 mutationRate: 1/3;		  "hyperparameter, 0 < mutationRate <= 1"    seed: 345643;				  "hyperparameter, seed > 0 and integer"    seedBlock: block;	 selectionStrategy: SGATournamentSelection; "hyperparameter, possible values: SGARandomSelection, SGARankSelection, SGARouletteSelection, SGATournamentSelection, SGATruncatedSelection"	 generateViews;    createTestCases;    yourself.tCFactory inspect